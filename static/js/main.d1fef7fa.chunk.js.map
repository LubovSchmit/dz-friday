{"version":3,"sources":["components/SuperComponents/SuperInputText/SuperInputText.module.css","components/SuperComponents/SuperButton/SuperButton.module.css","components/SuperComponents/SuperCheckbox/SuperCheckbox.module.css","components/TestComponents/TestPage.module.css","components/Profile.tsx","components/Register/Register.tsx","components/Password/RecoveryPass.tsx","components/Password/NewPass.tsx","components/ErrorPage.tsx","components/Header/Header.tsx","components/Login/Login.tsx","components/SuperComponents/SuperButton/SuperButton.tsx","components/SuperComponents/SuperInputText/SuperInputText.tsx","components/SuperComponents/SuperCheckbox/SuperCheckbox.tsx","components/TestComponents/TestPage.tsx","App.tsx","reportWebVitals.ts","store/auth-reducer.ts","store/register-Reducer.ts","store/res-pass-reducer.ts","store/profile-reducer.ts","store/password-reducer.ts","store/store.ts","index.tsx","components/Header/Header.module.css"],"names":["module","exports","Profile","Register","RecoveryPass","NewPass","ErrorPage","Header","className","s","container","link","to","Login","SuperButton","red","restProps","finalClassName","button","default","SuperInputText","type","onChange","onBlur","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","TestPage","column","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","RootReducer","combineReducers","register","state","action","password","auth","profile","resPass","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCAhKD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,MAAQ,2BAA2B,QAAU,6BAA6B,IAAM,2B,mBCAvID,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,SAAW,kC,mBCAlED,EAAOC,QAAU,CAAC,OAAS,2B,kJCDdC,EAAU,WACnB,OAAO,2CCDEC,EAAW,WACpB,OAAO,4CCDEC,EAAe,WACxB,OAAO,gDCDEC,EAAU,WACnB,OAAO,2CCDEC,EAAY,WACrB,OAAO,uC,uBCEEC,EAAS,WAClB,OACI,sBAAKC,UAAWC,IAAEC,UAAlB,UACI,cAAC,IAAD,CAASF,UAAWC,IAAEE,KAAMC,GAAG,WAA/B,uBACA,cAAC,IAAD,CAASJ,UAAWC,IAAEE,KAAMC,GAAG,YAA/B,wBACA,cAAC,IAAD,CAASJ,UAAWC,IAAEE,KAAMC,GAAG,WAA/B,uBACA,cAAC,IAAD,CAASJ,UAAWC,IAAEE,KAAMC,GAAG,gBAA/B,2BACA,cAAC,IAAD,CAASJ,UAAWC,IAAEE,KAAMC,GAAG,SAA/B,qBACA,cAAC,IAAD,CAASA,GAAG,YAAZ,wBCXCC,EAAQ,WACjB,OAAO,yC,+BC2BIC,EAfqC,SAAC,GAI9C,IAHLC,EAGI,EAHJA,IACAP,EAEI,EAFJA,UACGQ,EACC,mCACEC,EAAc,UAAMR,IAAES,OAAR,YAAkBH,EAAMN,IAAEM,IAAMN,IAAEU,QAAlC,YAA6CX,GAEjE,OACE,oCACEA,UAAWS,GACPD,K,iBCoDKI,EAlD2C,SAAC,GAWrD,EAVJC,KAUK,IATLC,EASI,EATJA,SACAC,EAQI,EARJA,OACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,WACAC,EAKI,EALJA,QACAC,EAII,EAJJA,MACAnB,EAGI,EAHJA,UACAoB,EAEI,EAFJA,cACGZ,EACC,sHAmBEa,EAAkB,UAAMpB,IAAEkB,MAAR,YAAiBC,GAAgC,IACnEE,EAAmB,UAAMrB,IAAEsB,MAAR,YACvBJ,EAAQlB,IAAEuB,WAAavB,IAAEwB,WADF,YAErBzB,GAEJ,OACE,qCACE,mCACEa,KAAM,OACNE,OAbiB,SAACW,GACtBX,GAAUA,EAAOW,IAabZ,SA5BmB,SAACY,GACxBZ,GACEA,EAASY,GAEXV,GAAgBA,EAAaU,EAAEC,cAAcC,QAyBzCX,WAvBqB,SAACS,GAC1BT,GAAcA,EAAWS,GAEzBR,GACY,UAAVQ,EAAEG,KACFX,KAmBElB,UAAWsB,GACPd,IAELW,GAAS,qBAAKnB,UAAWqB,EAAhB,SAAqCF,Q,iBCxBtCW,EAhCyC,SAAC,GASnD,EARJjB,KAQK,IAPLC,EAOI,EAPJA,SACAiB,EAMI,EANJA,gBACA/B,EAKI,EALJA,UAEAgC,GAGI,EAJJZ,cAII,EAHJY,UAEGxB,EACC,4FAQEc,EAAmB,UAAMrB,IAAEgC,SAAR,YAAoBjC,GAAwB,IAErE,OACE,kCACE,mCACEa,KAAM,WACNC,SAbmB,SAACY,GACxBZ,GAAYA,EAASY,GAErBK,GAAmBA,EAAgBL,EAAEC,cAAcO,UAW/ClC,UAAWsB,GACPd,IAELwB,GAAY,sBAAMhC,UAAWC,IAAEmB,cAAnB,SAAmCY,Q,iBCpCzCG,EAAW,WACpB,OAAO,sBAAKnC,UAAWC,IAAEmC,OAAlB,UACH,cAAC,EAAD,qBAGA,cAAC,EAAD,IACA,cAAC,EAAD,QCmBOC,MAlBf,WACI,OACI,sBAAKrC,UAAU,MAAf,UACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsC,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aCV1BC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCTDQ,EAAe,GCAtBA,EAAe,GCAjBA,EAAe,GCANA,EAAe,GCAfA,EAAe,GCQtBC,EAAcC,YAAgB,CAChCC,SJP2B,WAA6C,IAA5CC,EAA2C,uDAA9BJ,EAAcK,EAAgB,uCACvE,OAAQA,EAAOzC,MACX,IAAK,WACD,OAAO,eAAIwC,GACf,QACI,OAAOA,IIGfE,SDR2B,WAA6C,IAA5CF,EAA2C,uDAA9BJ,EAAcK,EAAgB,uCACvE,OAAQA,EAAOzC,MACX,IAAK,WACD,OAAO,eAAIwC,GACf,QACI,OAAOA,ICIfG,KLTuB,WAA6C,IAA5CH,EAA2C,uDAA9BJ,EAAcK,EAAgB,uCACnE,OAAQA,EAAOzC,MACX,IAAK,QACD,OAAO,eAAIwC,GAEf,QACI,OAAOA,IKIfI,QFV0B,WAA6C,IAA5CJ,EAA2C,uDAA9BJ,EAAcK,EAAgB,uCACtE,OAAQA,EAAOzC,MACX,IAAK,QACD,OAAO,eAAIwC,GACf,QACI,OAAOA,IEMfK,QHX0B,WAA6C,IAA5CL,EAA2C,uDAA9BJ,EAAcK,EAAgB,uCACtE,OAAQA,EAAOzC,MACX,IAAK,WACD,OAAO,eAAIwC,GAEf,QACI,OAAOA,MGQNM,EAAQC,YAAYV,EAAaW,YAAgBC,MAK9DC,OAAOJ,MAAQA,ECZfK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,UAIZQ,SAASC,eAAe,SAM5B5B,K,kBCtBAhD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,KAAO,wB","file":"static/js/main.d1fef7fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3kPpB\",\"superInput\":\"SuperInputText_superInput__1XKx8\",\"errorInput\":\"SuperInputText_errorInput__PCy8H\",\"error\":\"SuperInputText_error__3AhFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__3ssFB\",\"blink\":\"SuperButton_blink__1Dh7h\",\"default\":\"SuperButton_default__32d9q\",\"red\":\"SuperButton_red__1gsB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label___dRgk\",\"checkbox\":\"SuperCheckbox_checkbox__3ZjTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestPage_column__1IbTW\"};","export const Profile = () => {\r\n    return <div>Profile</div>\r\n}","export const Register = () => {\r\n    return <div>Register</div>\r\n}\r\n","export const RecoveryPass = () => {\r\n    return <div>RecoveryPass</div>\r\n}","export const NewPass = () => {\r\n    return <div>NewPass</div>\r\n}","export const ErrorPage = () => {\r\n    return <div>404</div>\r\n}","import {NavLink} from 'react-router-dom'\r\nimport s from './Header.module.css';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <NavLink className={s.link} to='/profile'> profile </NavLink>\r\n            <NavLink className={s.link} to='/register'> register </NavLink>\r\n            <NavLink className={s.link} to='/newPass'> newPass </NavLink>\r\n            <NavLink className={s.link} to='/recoveryPass'> RecoveryPass</NavLink>\r\n            <NavLink className={s.link} to='/login'> login </NavLink>\r\n            <NavLink to='/testPage'> test </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","export const Login = () => {\r\n    return <div>Login</div>\r\n}\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport s from './SuperButton.module.css';\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n  ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n  red?: boolean;\r\n};\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\r\n  red,\r\n  className,\r\n  ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\r\n}) => {\r\n  const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`;\r\n\r\n  return (\r\n    <button\r\n      className={finalClassName}\r\n      {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n    />\r\n  );\r\n};\r\n\r\nexport default SuperButton;\r\n","import React, {\r\n  ChangeEvent,\r\n  DetailedHTMLProps,\r\n  FocusEvent,\r\n  InputHTMLAttributes,\r\n  KeyboardEvent,\r\n} from 'react';\r\nimport s from './SuperInputText.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n  // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void;\r\n  onEnter?: () => void;\r\n  error?: string;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onBlur,\r\n  onChangeText,\r\n  onKeyPress,\r\n  onEnter,\r\n  error,\r\n  className,\r\n  spanClassName,\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && // если есть пропс onChange\r\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  };\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    onEnter && // если есть пропс onEnter\r\n      e.key === 'Enter' && // и если нажата кнопка Enter\r\n      onEnter(); // то вызвать его\r\n  };\r\n\r\n  const onBlurCallback = (e: FocusEvent<HTMLInputElement>) => {\r\n    onBlur && onBlur(e);\r\n  };\r\n\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n  const finalInputClassName = `${s.input} ${\r\n    error ? s.errorInput : s.superInput\r\n  } ${className}`;\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type={'text'}\r\n        onBlur={onBlurCallback}\r\n        onChange={onChangeCallback}\r\n        onKeyPress={onKeyPressCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n      />\r\n      {error && <div className={finalSpanClassName}>{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport s from './SuperCheckbox.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n  InputHTMLAttributes<HTMLInputElement>,\r\n  HTMLInputElement\r\n>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void;\r\n  spanClassName?: string;\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\r\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n  onChange,\r\n  onChangeChecked,\r\n  className,\r\n  spanClassName,\r\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n  ...restProps // все остальные пропсы попадут в объект restProps\r\n}) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    // сделайте так чтоб работал onChange и onChangeChecked\r\n  };\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`;\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  );\r\n};\r\n\r\nexport default SuperCheckbox;\r\n","import SuperButton from \"../SuperComponents/SuperButton/SuperButton\";\r\nimport SuperInputText from \"../SuperComponents/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../SuperComponents/SuperCheckbox/SuperCheckbox\";\r\nimport s from './TestPage.module.css'\r\n\r\nexport const TestPage = () => {\r\n    return <div className={s.column}>\r\n        <SuperButton>\r\n            button\r\n        </SuperButton>\r\n        <SuperInputText/>\r\n        <SuperCheckbox/>\r\n    </div>\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Routes, Route} from \"react-router-dom\";\nimport {Profile} from \"./components/Profile\";\nimport {Register} from \"./components/Register/Register\";\nimport {RecoveryPass} from \"./components/Password/RecoveryPass\";\nimport {NewPass} from \"./components/Password/NewPass\";\nimport {ErrorPage} from \"./components/ErrorPage\";\nimport {Header} from \"./components/Header/Header\";\nimport {Login} from \"./components/Login/Login\";\nimport {TestPage} from \"./components/TestComponents/TestPage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Routes>\n                <Route path='/profile' element={<Profile/>}/>\n                <Route path='/' element={<Profile/>}/>\n                <Route path='/login' element={<Login/>}/>\n                <Route path='/register' element={<Register/>}/>\n                <Route path='/recoveryPass' element={<RecoveryPass/>}/>\n                <Route path='/newPass' element={<NewPass/>}/>\n                <Route path='/testPage' element={<TestPage/>}/>\n                <Route path='*' element={<ErrorPage/>}/>\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {}\r\n\r\nexport const authReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case 'login': {\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const initialState = {}\r\n\r\nexport const registerReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case 'register':\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","let initialState = {}\r\n\r\nexport const resPassReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case 'res-pass': {\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","export const initialState = {}\r\n\r\nexport const profileReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case 'login':\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","export const initialState = {}\r\n\r\nexport const passwordReducer = (state: any = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case 'password':\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {registerReducer} from \"./register-Reducer\";\r\nimport {resPassReducer} from \"./res-pass-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {passwordReducer} from \"./password-reducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n    register: registerReducer,\r\n    password: passwordReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    resPass: resPassReducer,\r\n})\r\n\r\nexport const store = createStore(RootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof RootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Header_active__2BaGD\",\"container\":\"Header_container__1gmUQ\",\"link\":\"Header_link__3uFxL\"};"],"sourceRoot":""}